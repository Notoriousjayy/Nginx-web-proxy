# ─────────────── Deployment & metadata ───────────────
createNamespace: false
namespace: default
appName: react-app
serviceName: react-app
replicaCount: 3
revisionHistoryLimit: 2

# ─────────────── Autoscaling (off) ───────────────
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

# ─────────────── Image & pull secret ───────────────
imagePullSecrets:
  - name: ecr-regcred
image:
  repository: 866934333672.dkr.ecr.us-east-1.amazonaws.com/jordansuber/react-app
  tag: "0.0.3"
  pullPolicy: IfNotPresent

# ─────────────── Service (Cluster-internal) ───────────────
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  sessionAffinity: None
  annotations: {}
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080

# ─────────────── Ingress (shares the monitoring ALB) ───────────────
ingress:
  enabled: true
  ingressClassName: alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/group.name: monitoring
    alb.ingress.kubernetes.io/group.order: "99"          # lowered priority
  hosts:
    paths:
      - path: /
        pathType: Exact                                 # exact "/" only
  tls: []

# ─────────────── Probes ───────────────
readinessProbe:
  httpGet: { path: /, port: 8080 }
  initialDelaySeconds: 5
  periodSeconds: 10

livenessProbe:
  httpGet: { path: /, port: 8080 }
  initialDelaySeconds: 30
  periodSeconds: 30

# ─────────────── (optional) Config & Secret mounts ───────────────
configMap: { enabled: false }
secret:    { enabled: false }

nodeSelector: {}
tolerations: []
affinity:   {}
