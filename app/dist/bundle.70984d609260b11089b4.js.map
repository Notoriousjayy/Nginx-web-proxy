{"version":3,"file":"bundle.70984d609260b11089b4.js","mappings":"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","sources":["webpack://nginx-web-proxy/./src/components/Input.tsx","webpack://nginx-web-proxy/./src/components/Button/Button.tsx","webpack://nginx-web-proxy/./src/components/BorderedPanel/BorderedPanel.tsx","webpack://nginx-web-proxy/./src/pages/Contact/Contact.tsx","webpack://nginx-web-proxy/./src/pages/Contact/ContactStyles.ts","webpack://nginx-web-proxy/./src/components/H2/H2.tsx"],"sourcesContent":["import React from 'react';\r\nimport { theme } from './theme';\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <input\r\n      ref={ref}\r\n      className={clsx(\r\n        `px-${theme.spacing.md} py-${theme.spacing.sm} border border-gray-300 focus:outline-none focus:ring-2 focus:ring-${theme.colors.primary} ${theme.radii.sm}`,\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\nInput.displayName = 'Input';\r\nfunction clsx(arg0: string, className: string | undefined): string | undefined {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n","// src/components/Button/Button.tsx\r\nimport React from 'react'\r\n\r\nexport interface ButtonProps {\r\n  /** If provided, renders an <a> tag instead of <button> */\r\n  href?: string\r\n  /** Text label of the button */\r\n  label: string\r\n  /** target attribute for links (e.g. \"_blank\") */\r\n  target?: React.HTMLAttributeAnchorTarget\r\n  /** button style variant; currently only \"primary\" is supported */\r\n  type?: 'primary'\r\n  /** click handler for native button */\r\n  onClick?: React.ButtonHTMLAttributes<HTMLButtonElement>['onClick']\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  href,\r\n  label,\r\n  target,\r\n  type = 'primary',\r\n  onClick,\r\n}) => {\r\n  const baseClasses = [\r\n    'inline-block',\r\n    'text-[18px]',\r\n    'font-bold',\r\n    'leading-[1]',\r\n    'px-[24px]',\r\n    'py-[12px]',\r\n    'transition',\r\n  ]\r\n\r\n  // Variant classes\r\n  const variantClasses =\r\n    type === 'primary'\r\n      ? [\r\n          'bg-orange-ff583d',\r\n          'text-neutral-222224',\r\n          'hover:bg-yellow-f0c808',\r\n        ]\r\n      : []\r\n\r\n  const className = [...baseClasses, ...variantClasses].join(' ')\r\n\r\n  if (href) {\r\n    // For links, add rel if opening in new tab\r\n    const rel = target === '_blank' ? 'noopener noreferrer' : undefined\r\n    return (\r\n      <a href={href} target={target} rel={rel} className={className}>\r\n        {label}\r\n      </a>\r\n    )\r\n  }\r\n\r\n  // Otherwise render a button\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={className}>\r\n      {label}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","// src/components/BorderedPanel/BorderedPanel.tsx\r\nimport React, { JSX, ReactNode } from 'react'\r\n\r\nexport interface BorderedPanelProps {\r\n  /** Which HTML tag to render (defaults to `div`) */\r\n  as?: keyof JSX.IntrinsicElements\r\n  /** Tailwind-style border color class, e.g. \"blue-00bff3\" */\r\n  borderColor: string\r\n  /** Tailwind-style background color class, e.g. \"olive-9aa665\" */\r\n  backgroundColor: string\r\n  /** Child nodes to render inside the panel */\r\n  children?: ReactNode\r\n}\r\n\r\nexport const BorderedPanel: React.FC<BorderedPanelProps> = ({\r\n  as = 'div',\r\n  borderColor,\r\n  backgroundColor,\r\n  children,\r\n}) => {\r\n  const Tag = as as any\r\n\r\n  // We’re using utility classes to reproduce:\r\n  // border-style: solid; border-width: 8px;\r\n  // width: 100%; max-width: 800px; margin: 0 auto;\r\n  // padding: 32px; at min-width 800px padding-horizontal: 64px\r\n  const className = [\r\n    `border-solid`,\r\n    `border-[8px]`,\r\n    `w-full`,\r\n    `max-w-[800px]`,\r\n    `mx-auto`,\r\n    `p-[32px]`,\r\n    `@mq-800--px-[64px]`,\r\n    `border-${borderColor}`,\r\n    backgroundColor,\r\n  ].join(' ')\r\n\r\n  return <Tag className={className}>{children}</Tag>\r\n}\r\n\r\nexport default BorderedPanel\r\n","// src/pages/Contact/Contact.tsx\r\nimport React, { useState, FormEvent } from 'react'\r\nimport { H2 } from '../../components/H2'\r\nimport { Input } from '../../components/Input'\r\nimport { Button } from '../../components/Button'\r\nimport { BorderedPanel } from '../../components/BorderedPanel'\r\n\r\nexport const Contact: React.FC = () => {\r\n  const [hasSubmitted, setHasSubmitted] = useState(false)\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault()\r\n    // → here you’d fire off your API call…\r\n    setHasSubmitted(true)\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      {/* Hero / Intro */}\r\n      <section className=\"py-24 bg-yellow-f0c808\">\r\n        <div className=\"container mx-auto px-8 flex flex-col md:flex-row items-center justify-between\">\r\n          <div className=\"md:w-1/2 mb-8 md:mb-0\">\r\n            <H2 heading=\"Contact\" />\r\n            <p className=\"text-lg leading-tight\">\r\n              We’re available 24-7 via our contact form below, or by emailing{' '}\r\n              <a\r\n                href=\"mailto:info@binaryville.com\"\r\n                className=\"underline\"\r\n              >\r\n                info@binaryville.com\r\n              </a>\r\n              . We’re happy to answer any questions you may have.\r\n            </p>\r\n          </div>\r\n          <img\r\n            src=\"/images/logo.svg\"\r\n            alt=\"Binaryville logo\"\r\n            width={423}\r\n            height={219}\r\n            className=\"mx-auto max-w-full\"\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      {/* Form */}\r\n      <section className=\"container mx-auto px-8 py-12\">\r\n        <BorderedPanel\r\n          as=\"div\"\r\n          borderColor=\"blue-00bff3\"\r\n          backgroundColor=\"white\"\r\n        >\r\n          {hasSubmitted ? (\r\n            <div className=\"text-center space-y-4\">\r\n              <p className=\"text-blue-265f8e text-2xl\">\r\n                Your submission has been received.\r\n              </p>\r\n              <p>\r\n                Our robots are eager to help and will reach out shortly.\r\n                <br />\r\n                Thanks for your inquiry!\r\n              </p>\r\n              <img\r\n                src=\"/images/contact/fred-standing.png\"\r\n                alt=\"\"\r\n                width={162}\r\n                height={279}\r\n                className=\"mx-auto\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              <div className=\"flex flex-wrap -mx-2\">\r\n                <div className=\"w-full md:w-1/2 px-2 mb-4\">\r\n                  <label\r\n                    htmlFor=\"first-name\"\r\n                    className=\"block text-blue-265f8e mb-1\"\r\n                  >\r\n                    First name\r\n                  </label>\r\n                  <Input id=\"first-name\" name=\"firstName\" required />\r\n                </div>\r\n                <div className=\"w-full md:w-1/2 px-2 mb-4\">\r\n                  <label\r\n                    htmlFor=\"last-name\"\r\n                    className=\"block text-blue-265f8e mb-1\"\r\n                  >\r\n                    Last name\r\n                  </label>\r\n                  <Input id=\"last-name\" name=\"lastName\" required />\r\n                </div>\r\n                <div className=\"w-full md:w-1/2 px-2 mb-4\">\r\n                  <label\r\n                    htmlFor=\"daytime-phone\"\r\n                    className=\"block text-blue-265f8e mb-1\"\r\n                  >\r\n                    Daytime Phone #\r\n                  </label>\r\n                  <Input\r\n                    id=\"daytime-phone\"\r\n                    name=\"phone\"\r\n                    type=\"tel\"\r\n                  />\r\n                </div>\r\n                <div className=\"w-full px-2 mb-4\">\r\n                  <label\r\n                    htmlFor=\"e-mail\"\r\n                    className=\"block text-blue-265f8e mb-1\"\r\n                  >\r\n                    E-mail\r\n                  </label>\r\n                  <Input\r\n                    id=\"e-mail\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"w-full px-2 mb-4\">\r\n                  <label\r\n                    htmlFor=\"additional-info\"\r\n                    className=\"block text-blue-265f8e mb-1\"\r\n                  >\r\n                    Message\r\n                  </label>\r\n                  <textarea\r\n                    id=\"additional-info\"\r\n                    name=\"message\"\r\n                    rows={6}\r\n                    required\r\n                    className=\"w-full border border-gray-300 p-3 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  label=\"Submit Inquiry\"\r\n                />\r\n              </div>\r\n            </form>\r\n          )}\r\n        </BorderedPanel>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","// ContactStyles.ts\r\nimport { CSSProperties } from 'react';\r\n\r\nexport const contactStyles: CSSProperties = {\r\n  backgroundColor: '#ffffff',\r\n  padding: '2rem',\r\n  borderRadius: '0.5rem',\r\n  boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n};\r\n\r\n","import React from 'react'\r\n\r\nexport interface H2Props {\r\n  /** Text to render inside the H2 */\r\n  heading: string\r\n}\r\n\r\nexport const H2: React.FC<H2Props> = ({ heading }) => (\r\n  <h2 className=\"font-size:32px line-height:1.125 margin-bottom:16px @mq-960--margin-bottom:24px\">\r\n    {heading}\r\n  </h2>\r\n)\r\n"],"names":["Input","ref","className","props","clsx","arg0","Error","displayName","Button","href","label","target","type","onClick","join","rel","undefined","BorderedPanel","as","borderColor","backgroundColor","children","Tag","hasSubmitted","setHasSubmitted","useState","H2","heading","src","alt","width","height","onSubmit","e","preventDefault","htmlFor","id","name","required","rows","contactStyles","padding","borderRadius","boxShadow"],"sourceRoot":""}